{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6aa3AF8A0dF5a1220D8C3aAA3932DEe19B274921",
    "txHash": "0xd6b79364d8cc0486e199427b9845c34cd4757dad67dbc7da632414a65c8b3dc0"
  },
  "proxies": [
    {
      "address": "0x8A89F645F37D4473165512B6fDb22d628c159a7f",
      "txHash": "0x2861005259bc7050011d9788ca4e71f1dcc85edf6f1ccdf8bec1ffde29e2e51f",
      "kind": "transparent"
    },
    {
      "address": "0x89bB3953cDf8a886bA2ba696e5b91B9bCe8A68fd",
      "txHash": "0xdcd21a12eb9d03a144a77781371419d524852edb91e0a8b4e86560c1c8885a54",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d6c80e356c7cfcdd62763557e0c823f16a0d5df8d129f3d66b19ab4643ce6956": {
      "address": "0x01f42Aaa61Ff2aC639e4B95Dbd00a884C7D7ece4",
      "txHash": "0xcc1cbbf9c2f35e0088fce4dc49cb1b75185e2278f0a159b25649bf170f167fb4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Swagtag",
            "label": "_tokenIds",
            "type": "t_struct(Counter)2408_storage",
            "src": "../project:/contracts/Swagtag.sol:13"
          },
          {
            "contract": "Swagtag",
            "label": "_names",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Swagtag.sol:14"
          },
          {
            "contract": "Swagtag",
            "label": "_addresses",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Swagtag.sol:15"
          },
          {
            "contract": "Swagtag",
            "label": "_id_to_trade",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Swagtag.sol:17"
          },
          {
            "contract": "Swagtag",
            "label": "itemToken",
            "type": "t_contract(IERC721Upgradeable)1194",
            "src": "../project:/contracts/Swagtag.sol:19"
          },
          {
            "contract": "Swagtag",
            "label": "trades",
            "type": "t_mapping(t_uint256,t_struct(Trade)2593_storage)",
            "src": "../project:/contracts/Swagtag.sol:36"
          },
          {
            "contract": "Swagtag",
            "label": "tradeCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/Swagtag.sol:38"
          }
        ],
        "types": {
          "t_struct(Counter)2408_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IERC721Upgradeable)1194": {
            "label": "contract IERC721Upgradeable"
          },
          "t_mapping(t_uint256,t_struct(Trade)2593_storage)": {
            "label": "mapping(uint256 => struct Swagtag.Trade)"
          },
          "t_struct(Trade)2593_storage": {
            "label": "struct Swagtag.Trade",
            "members": [
              {
                "label": "poster",
                "type": "t_address_payable"
              },
              {
                "label": "item",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_bytes32"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
